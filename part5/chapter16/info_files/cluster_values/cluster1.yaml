env: production

cluster_info:
  name: cluster1
  version: 1.31
  log_types: [audit, api, authenticator]
  auth_mode: API
  upgrade_policy: EXTENDED
  arc_zonal_shift: true

network_info:
  vpc_name: eks
  subnet_name_list: [pub-eks]
  allow_public_access: true
  allow_private_access: true
  public_access_cidrs: ["0.0.0.0/0"]
  private_access_cidrs: [self-vpc]

# [코드 16-6] aws-auth configMap을 덮어쓰기 위한 데이터 입력값
# aws_auth:
#   mapRoles:
#   - rolearn: arn:aws:iam::000000000000:role/Admin
#     username: admin
#     groups: [system:masters]
#   mapUsers:
#   - userarn: arn:aws:iam::000000000000:user/Honglab
#     username: honglab
#     groups: [system:masters]
#   mapAccounts:
#   - 012345678901
#   - 456789012345

# [코드 16-9] Access Entries 입력 데이터
access_entries:
- principal_arn: arn:aws:iam::000000000000:role/Admin
  access_policies:
  - policy: AmazonEKSClusterAdminPolicy
    type: cluster
  - policy: AmazonEKSAdminViewPolicy
    type: namespace
    namespaces: [kube-system]
- principal_arn: arn:aws:iam::000000000000:user/Honglab
  k8s_groups: [custom_group1, custom_group2]
  k8s_username: honglab
  access_policies:
  - policy: AmazonEKSAdminViewPolicy
    type: cluster
    namespaces: [kube-system] # cluster type이라 실제로는 적용되지 않음

fargate_profile:
  subnet_name_list: [pri-eks] # public subnet 사용 불가
  profiles:
  - name: karpenter
    namespace: kube-system
    labels:
      app.kubernetes.io/name: karpenter
  - name: coredns
    namespace: kube-system
    labels:
      k8s-app: kube-dns

eks_addon:
  vpc-cni:
    enable: true
    version: v1.19.0-eksbuild.1
    configuration: |-
      env:
        WARM_IP_TARGET: "2"
        MINIMUM_IP_TARGET: "10"
  coredns:
    enable: true
    version: v1.11.3-eksbuild.1
    configuration: |-
      computeType: Fargate
  kube-proxy:
    enable: true
    version: v1.31.2-eksbuild.3

# [코드 16-19]
helm_release:
  metrics-server:
    enable: true
  external-dns:
    enable: true
    # 기본값과 다른 경우 작성
    overwrite_values:
      policy: sync
      serviceAccount.create: true

# [코드 16-34 & 35]
karpenter:
  stateless-01:
    subnet_name_list: [pri-eks]
    volume_size_list: [50]
    node_spec:
      expireAfter: 720h
      imgae_alias: [al2@latest]
      image_arch: [amd64]
      image_os: [linux]
      instance_capacity: [spot]
      instance_family: [t3]
      instance_size: [small, medium]
    disruption:
      consolidationPolicy: WhenEmptyOrUnderutilized
      consolidateAfter: 10m
      budgets:
      # Empty or Drifted 상태의 노드는 전체의 20%까지 죽여도 된다.
      - nodes: "20%"
        reasons: [Empty, Drifted]
      # 동시에 최대 3대까지 죽을 수 있다.
      - nodes: "3"
      # 매일 00:00~00:30분 동안은 노드가 죽지 않는다.
      - nodes: "0"
        schedule: "@daily"
        duration: 30m
    k8s_labels:
      node-label.terraform-overdose/type: stateless
      node-label.terraform-overdose/karpenter: stateless-01
      node-label.terraform-overdose/compute: cpu
  
  stateful-01:
    subnet_name_list: [pri-eks]
    volume_size_list: [100, 100]
    node_spec:
      expireAfter: Never
      imgae_alias: [al2@latest]
      image_arch: [amd64]
      image_os: [linux]
      instance_capacity: [on-demand]
      instance_family: [t3]
      instance_size: [small, medium]
    disruption:
      consolidationPolicy: WhenEmpty
      consolidateAfter: Never
      budgets:
      - nodes: "0"
    taints:
      node-taint.terraform-overdose/stateful: true
    k8s_labels:
      node-label.terraform-overdose/type: stateful
      node-label.terraform-overdose/karpenter: stateful-01
      node-label.terraform-overdose/compute: cpu
